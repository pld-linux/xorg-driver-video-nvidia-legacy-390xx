--- NVIDIA-Linux-x86_64-390.143-no-compat32/kernel/nvidia-drm/nvidia-drm-crtc.c~	2021-03-12 08:31:39.000000000 +0100
+++ NVIDIA-Linux-x86_64-390.143-no-compat32/kernel/nvidia-drm/nvidia-drm-crtc.c	2021-07-02 20:27:35.094061481 +0200
@@ -39,6 +39,8 @@
 #include <drm/drm_atomic.h>
 #include <drm/drm_atomic_helper.h>
 
+#include <linux/version.h>
+
 static const u32 nv_default_supported_plane_drm_formats[] = {
     DRM_FORMAT_ARGB1555,
     DRM_FORMAT_XRGB1555,
@@ -131,12 +133,19 @@
 }
 
 static int nv_drm_plane_atomic_check(struct drm_plane *plane,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 13, 0)
                                      struct drm_plane_state *plane_state)
+#else
+                                     struct drm_atomic_state *state)
+#endif
 {
     int i;
     struct drm_crtc *crtc;
     struct drm_crtc_state *crtc_state;
     NvKmsKapiPlaneType type;
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 0)
+    struct drm_plane_state *plane_state = drm_atomic_get_new_plane_state(state, plane);
+#endif
 
     if (NV_DRM_WARN(!drm_plane_type_to_nvkms_plane_type(plane->type, &type))) {
         goto done;
@@ -175,12 +175,20 @@
 }
 
 static void nv_drm_plane_atomic_update(struct drm_plane *plane,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 13, 0)
                                        struct drm_plane_state *old_state)
+#else
+                                       struct drm_atomic_state *state)
+#endif
 {
 }
 
 static void nv_drm_plane_atomic_disable(struct drm_plane *plane,
+#if LINUX_VERSION_CODE < KERNEL_VERSION(5, 13, 0)
                                         struct drm_plane_state *old_state)
+#else
+                                        struct drm_atomic_state *state)
+#endif
 {
 }
 
